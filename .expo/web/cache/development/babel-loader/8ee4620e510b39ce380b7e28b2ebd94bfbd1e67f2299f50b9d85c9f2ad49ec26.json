{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar Menu = function Menu() {\n  var _useState = useState(false),\n    _useState2 = _slicedToArray(_useState, 2),\n    isMenuOpen = _useState2[0],\n    setIsMenuOpen = _useState2[1];\n  var toggleMenu = function toggleMenu() {\n    setIsMenuOpen(!isMenuOpen);\n  };\n  return _jsxs(View, {\n    style: styles.container,\n    children: [_jsx(TouchableOpacity, {\n      onPress: toggleMenu,\n      children: _jsx(Text, {\n        style: styles.menuButton,\n        children: \"Toggle Menu\"\n      })\n    }), isMenuOpen && _jsxs(View, {\n      style: styles.menu,\n      children: [_jsx(TouchableOpacity, {\n        children: _jsx(Text, {\n          style: styles.menuItem,\n          children: \"Option 1\"\n        })\n      }), _jsx(TouchableOpacity, {\n        children: _jsx(Text, {\n          style: styles.menuItem,\n          children: \"Option 2\"\n        })\n      }), _jsx(TouchableOpacity, {\n        children: _jsx(Text, {\n          style: styles.menuItem,\n          children: \"Option 3\"\n        })\n      })]\n    })]\n  });\n};\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  menuButton: {\n    fontSize: 20,\n    color: 'blue'\n  },\n  menu: {\n    position: 'absolute',\n    top: 40,\n    right: 10,\n    backgroundColor: 'white',\n    padding: 10,\n    borderRadius: 5,\n    elevation: 5\n  },\n  menuItem: {\n    fontSize: 18,\n    paddingVertical: 8\n  }\n});\nexport default Menu;","map":{"version":3,"names":["React","useState","View","Text","StyleSheet","TouchableOpacity","jsx","_jsx","jsxs","_jsxs","Menu","_useState","_useState2","_slicedToArray","isMenuOpen","setIsMenuOpen","toggleMenu","style","styles","container","children","onPress","menuButton","menu","menuItem","create","flex","alignItems","justifyContent","fontSize","color","position","top","right","backgroundColor","padding","borderRadius","elevation","paddingVertical"],"sources":["D:/LTTBDT2/Example01/components/Menu.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { View, Text, StyleSheet, TouchableOpacity } from 'react-native';\r\n\r\nconst Menu = () => {\r\n  const [isMenuOpen, setIsMenuOpen] = useState(false);\r\n\r\n  const toggleMenu = () => {\r\n    setIsMenuOpen(!isMenuOpen);\r\n  };\r\n\r\n  return (\r\n    <View style={styles.container}>\r\n      <TouchableOpacity onPress={toggleMenu}>\r\n        <Text style={styles.menuButton}>Toggle Menu</Text>\r\n      </TouchableOpacity>\r\n\r\n      {isMenuOpen && (\r\n        <View style={styles.menu}>\r\n          <TouchableOpacity>\r\n            <Text style={styles.menuItem}>Option 1</Text>\r\n          </TouchableOpacity>\r\n          <TouchableOpacity>\r\n            <Text style={styles.menuItem}>Option 2</Text>\r\n          </TouchableOpacity>\r\n          <TouchableOpacity>\r\n            <Text style={styles.menuItem}>Option 3</Text>\r\n          </TouchableOpacity>\r\n        </View>\r\n      )}\r\n    </View>\r\n  );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n  },\r\n  menuButton: {\r\n    fontSize: 20,\r\n    color: 'blue',\r\n  },\r\n  menu: {\r\n    position: 'absolute',\r\n    top: 40,\r\n    right: 10,\r\n    backgroundColor: 'white',\r\n    padding: 10,\r\n    borderRadius: 5,\r\n    elevation: 5,\r\n  },\r\n  menuItem: {\r\n    fontSize: 18,\r\n    paddingVertical: 8,\r\n  },\r\n});\r\n\r\nexport default Menu;\r\n"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAAC,OAAAC,IAAA;AAAA,OAAAC,IAAA;AAAA,OAAAC,UAAA;AAAA,OAAAC,gBAAA;AAAA,SAAAC,GAAA,IAAAC,IAAA;AAAA,SAAAC,IAAA,IAAAC,KAAA;AAGxC,IAAMC,IAAI,GAAG,SAAPA,IAAIA,CAAA,EAAS;EACjB,IAAAC,SAAA,GAAoCV,QAAQ,CAAC,KAAK,CAAC;IAAAW,UAAA,GAAAC,cAAA,CAAAF,SAAA;IAA5CG,UAAU,GAAAF,UAAA;IAAEG,aAAa,GAAAH,UAAA;EAEhC,IAAMI,UAAU,GAAG,SAAbA,UAAUA,CAAA,EAAS;IACvBD,aAAa,CAAC,CAACD,UAAU,CAAC;EAC5B,CAAC;EAED,OACEL,KAAA,CAACP,IAAI;IAACe,KAAK,EAAEC,MAAM,CAACC,SAAU;IAAAC,QAAA,GAC5Bb,IAAA,CAACF,gBAAgB;MAACgB,OAAO,EAAEL,UAAW;MAAAI,QAAA,EACpCb,IAAA,CAACJ,IAAI;QAACc,KAAK,EAAEC,MAAM,CAACI,UAAW;QAAAF,QAAA,EAAC;MAAW,CAAM;IAAC,CAClC,CAAC,EAElBN,UAAU,IACTL,KAAA,CAACP,IAAI;MAACe,KAAK,EAAEC,MAAM,CAACK,IAAK;MAAAH,QAAA,GACvBb,IAAA,CAACF,gBAAgB;QAAAe,QAAA,EACfb,IAAA,CAACJ,IAAI;UAACc,KAAK,EAAEC,MAAM,CAACM,QAAS;UAAAJ,QAAA,EAAC;QAAQ,CAAM;MAAC,CAC7B,CAAC,EACnBb,IAAA,CAACF,gBAAgB;QAAAe,QAAA,EACfb,IAAA,CAACJ,IAAI;UAACc,KAAK,EAAEC,MAAM,CAACM,QAAS;UAAAJ,QAAA,EAAC;QAAQ,CAAM;MAAC,CAC7B,CAAC,EACnBb,IAAA,CAACF,gBAAgB;QAAAe,QAAA,EACfb,IAAA,CAACJ,IAAI;UAACc,KAAK,EAAEC,MAAM,CAACM,QAAS;UAAAJ,QAAA,EAAC;QAAQ,CAAM;MAAC,CAC7B,CAAC;IAAA,CACf,CACP;EAAA,CACG,CAAC;AAEX,CAAC;AAED,IAAMF,MAAM,GAAGd,UAAU,CAACqB,MAAM,CAAC;EAC/BN,SAAS,EAAE;IACTO,IAAI,EAAE,CAAC;IACPC,UAAU,EAAE,QAAQ;IACpBC,cAAc,EAAE;EAClB,CAAC;EACDN,UAAU,EAAE;IACVO,QAAQ,EAAE,EAAE;IACZC,KAAK,EAAE;EACT,CAAC;EACDP,IAAI,EAAE;IACJQ,QAAQ,EAAE,UAAU;IACpBC,GAAG,EAAE,EAAE;IACPC,KAAK,EAAE,EAAE;IACTC,eAAe,EAAE,OAAO;IACxBC,OAAO,EAAE,EAAE;IACXC,YAAY,EAAE,CAAC;IACfC,SAAS,EAAE;EACb,CAAC;EACDb,QAAQ,EAAE;IACRK,QAAQ,EAAE,EAAE;IACZS,eAAe,EAAE;EACnB;AACF,CAAC,CAAC;AAEF,eAAe5B,IAAI"},"metadata":{},"sourceType":"module","externalDependencies":[]}