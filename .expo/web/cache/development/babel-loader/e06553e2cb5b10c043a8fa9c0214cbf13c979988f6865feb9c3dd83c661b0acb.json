{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useEffect, useState } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport { Card, Button, Image } from 'react-native-elements';\nimport Icon from \"@expo/vector-icons/MaterialIcons\";\nimport { useNavigation } from '@react-navigation/native';\nimport Header from \"../components/Header\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\nvar HomeScreen = function HomeScreen() {\n  var _useState = useState([]),\n    _useState2 = _slicedToArray(_useState, 2),\n    products = _useState2[0],\n    setProducts = _useState2[1];\n  var navigation = useNavigation();\n  useEffect(function () {\n    fetch('https://fakestoreapi.com/products').then(function (response) {\n      return response.json();\n    }).then(function (result) {\n      setProducts(result);\n    }).catch(function (error) {\n      return console.error('Error fetching products:', error);\n    });\n  }, []);\n  var handleProductPress = function handleProductPress(productId) {\n    navigation.navigate('Detail', {\n      productId: productId\n    });\n  };\n  var renderItem = function renderItem(_ref) {\n    var item = _ref.item;\n    return _jsx(TouchableOpacity, {\n      style: styles.productContainer,\n      onPress: function onPress() {\n        return handleProductPress(item.id);\n      },\n      children: _jsxs(Card, {\n        style: styles.card,\n        children: [_jsx(Image, {\n          source: {\n            uri: item.image\n          },\n          style: styles.productImage\n        }), _jsx(Text, {\n          style: styles.text,\n          children: item.title\n        }), _jsxs(Text, {\n          style: styles.productPrice,\n          children: [\"Price: $\", item.price]\n        }), _jsx(Button, {\n          icon: _jsx(Icon, {\n            name: \"add-shopping-cart\",\n            size: 25,\n            color: \"#ffffff\"\n          }),\n          buttonStyle: styles.buyButton,\n          title: \"BUY\"\n        })]\n      })\n    }, item.id);\n  };\n  return _jsxs(_Fragment, {\n    children: [_jsx(Header, {\n      title: \"SHOPPE\"\n    }), _jsx(FlatList, {\n      data: products,\n      renderItem: renderItem,\n      keyExtractor: function keyExtractor(item) {\n        return item.id.toString();\n      },\n      numColumns: 2\n    })]\n  });\n};\nvar styles = StyleSheet.create({\n  container: {},\n  productContainer: {\n    width: '50%',\n    height: 250,\n    marginBottom: 20\n  },\n  card: {\n    flex: 1\n  },\n  text: {\n    color: 'black',\n    fontSize: 16,\n    fontWeight: 'bold',\n    height: 40,\n    overflow: 'hidden',\n    textAlign: 'center'\n  },\n  productImage: {\n    width: '100%',\n    height: 150\n  },\n  productPrice: {\n    marginBottom: 10,\n    textAlign: 'center'\n  },\n  buyButton: {\n    borderRadius: 0,\n    marginLeft: 0,\n    marginRight: 0,\n    marginBottom: 0\n  }\n});\nexport default HomeScreen;","map":{"version":3,"names":["React","useEffect","useState","View","FlatList","StyleSheet","TouchableOpacity","Text","Card","Button","Image","Icon","useNavigation","Header","jsx","_jsx","jsxs","_jsxs","Fragment","_Fragment","HomeScreen","_useState","_useState2","_slicedToArray","products","setProducts","navigation","fetch","then","response","json","result","catch","error","console","handleProductPress","productId","navigate","renderItem","_ref","item","style","styles","productContainer","onPress","id","children","card","source","uri","image","productImage","text","title","productPrice","price","icon","name","size","color","buttonStyle","buyButton","data","keyExtractor","toString","numColumns","create","container","width","height","marginBottom","flex","fontSize","fontWeight","overflow","textAlign","borderRadius","marginLeft","marginRight"],"sources":["D:/LTTBDT2/Example01/src/screens/HomeScreen.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { View, FlatList, StyleSheet, TouchableOpacity, Text } from 'react-native';\r\nimport { Card, Button, Image } from 'react-native-elements';\r\nimport Icon from 'react-native-vector-icons/MaterialIcons';\r\nimport { useNavigation } from '@react-navigation/native';\r\nimport Header from '../components/Header';\r\n\r\nconst HomeScreen = () => {\r\n  const [products, setProducts] = useState([]);\r\n  const navigation = useNavigation();\r\n\r\n  useEffect(() => {\r\n    fetch('https://fakestoreapi.com/products')\r\n      .then(response => response.json())\r\n      .then(result => {\r\n        setProducts(result);\r\n      })\r\n      .catch(error => console.error('Error fetching products:', error));\r\n  }, []);\r\n\r\n  const handleProductPress = (productId) => {\r\n    navigation.navigate('Detail', { productId });\r\n  };\r\n\r\n  const renderItem = ({ item }) => (\r\n    <TouchableOpacity\r\n      key={item.id}\r\n      style={styles.productContainer}\r\n      onPress={() => handleProductPress(item.id)}\r\n    >\r\n      <Card style={styles.card}>\r\n        <Image source={{ uri: item.image }} style={styles.productImage} />\r\n        <Text style={styles.text}>{item.title}</Text>\r\n        <Text style={styles.productPrice}>Price: ${item.price}</Text>\r\n        <Button\r\n          icon={<Icon name=\"add-shopping-cart\" size={25} color=\"#ffffff\" />}\r\n          buttonStyle={styles.buyButton}\r\n          title=\"BUY\"\r\n        />\r\n      </Card>\r\n    </TouchableOpacity>\r\n  );\r\n\r\n  return (\r\n    <>\r\n      <Header title=\"SHOPPE\" />\r\n      <FlatList\r\n        data={products}\r\n        renderItem={renderItem}\r\n        keyExtractor={(item) => item.id.toString()}\r\n        numColumns={2} // Đặt số cột là 2 để sản phẩm trượt ngang\r\n      />\r\n    </>\r\n  );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    // flexDirection: 'row',\r\n    // flexWrap: 'wrap',\r\n    // justifyContent: 'space-evenly',\r\n  },\r\n  productContainer: {\r\n    width: '50%', // Đặt chiều rộng là 50% để có 2 cột\r\n    height: 250, // Adjust the height to 250\r\n    marginBottom: 20,\r\n  },\r\n  card: {\r\n    flex: 1,\r\n  },\r\n  text: {\r\n    color: 'black',\r\n    fontSize: 16,\r\n    fontWeight: 'bold',\r\n    height: 40,\r\n    overflow: 'hidden',\r\n    textAlign: 'center',\r\n  },\r\n  productImage: {\r\n    width: '100%',\r\n    height: 150,\r\n  },\r\n  productPrice: {\r\n    marginBottom: 10,\r\n    textAlign: 'center',\r\n  },\r\n  buyButton: {\r\n    borderRadius: 0,\r\n    marginLeft: 0,\r\n    marginRight: 0,\r\n    marginBottom: 0,\r\n  },\r\n});\r\n\r\nexport default HomeScreen;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}