{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useEffect, useState } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport { Card, Button, Image } from 'react-native-elements';\nimport Icon from \"@expo/vector-icons/MaterialIcons\";\nimport { useNavigation } from '@react-navigation/native';\nimport Header from \"../components/Header\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\nvar HomeScreen = function HomeScreen() {\n  var _useState = useState([]),\n    _useState2 = _slicedToArray(_useState, 2),\n    products = _useState2[0],\n    setProducts = _useState2[1];\n  var navigation = useNavigation();\n  useEffect(function () {\n    fetch('https://fakestoreapi.com/products').then(function (response) {\n      return response.json();\n    }).then(function (result) {\n      setProducts(result);\n    }).catch(function (error) {\n      return console.error('Error fetching products:', error);\n    });\n  }, []);\n  var handleProductPress = function handleProductPress(productId) {\n    navigation.navigate('Detail', {\n      productId: productId\n    });\n  };\n  return _jsx(_Fragment, {\n    children: _jsxs(ScrollView, {\n      children: [_jsx(Header, {\n        title: \"SHOPPE\"\n      }), _jsxs(View, {\n        style: {\n          flexDirection: 'row',\n          alignItems: 'center'\n        },\n        children: [_jsx(Text, {\n          style: {\n            marginTop: 130,\n            marginLeft: 15,\n            fontSize: 22,\n            fontWeight: 'bold'\n          },\n          children: \"Hot deals\"\n        }), _jsx(View, {\n          style: {\n            marginTop: 130,\n            flex: 1,\n            flexDirection: 'row-reverse',\n            marginRight: 10\n          },\n          children: _jsx(Text, {\n            style: {\n              fontSize: 18,\n              color: 'red',\n              marginEnd: 15\n            },\n            children: \"View all\"\n          })\n        })]\n      }), _jsx(ScrollView, {\n        horizontal: true,\n        showsHorizontalScrollIndicator: false,\n        contentContainerStyle: styles.scrollViewContent,\n        children: _jsx(View, {\n          style: styles.container,\n          children: products.map(function (product) {\n            return _jsx(TouchableOpacity, {\n              style: styles.productContainer,\n              onPress: function onPress() {\n                return handleProductPress(product.id);\n              },\n              children: _jsxs(Card, {\n                style: styles.card,\n                children: [_jsx(Image, {\n                  source: {\n                    uri: product.image\n                  },\n                  style: styles.productImage\n                }), _jsx(Text, {\n                  style: styles.text,\n                  children: product.title\n                }), _jsxs(Text, {\n                  style: styles.productPrice,\n                  children: [\"Price: $\", product.price]\n                }), _jsx(Button, {\n                  icon: _jsx(Icon, {\n                    name: \"add-shopping-cart\",\n                    size: 25,\n                    color: \"#ffffff\"\n                  }),\n                  buttonStyle: styles.buyButton,\n                  title: \"BUY\"\n                })]\n              })\n            }, product.id);\n          })\n        })\n      }), _jsx(ScrollView, {\n        horizontal: true,\n        showsHorizontalScrollIndicator: false,\n        contentContainerStyle: styles.scrollViewContent,\n        children: _jsx(View, {\n          style: styles.container,\n          children: products.map(function (product) {\n            return _jsx(TouchableOpacity, {\n              style: styles.productContainer,\n              onPress: function onPress() {\n                return handleProductPress(product.id);\n              },\n              children: _jsxs(Card, {\n                style: styles.card,\n                children: [_jsx(Image, {\n                  source: {\n                    uri: product.image\n                  },\n                  style: styles.productImage\n                }), _jsx(Text, {\n                  style: styles.text,\n                  children: product.title\n                }), _jsxs(Text, {\n                  style: styles.productPrice,\n                  children: [\"Price: $\", product.price]\n                }), _jsx(Button, {\n                  icon: _jsx(Icon, {\n                    name: \"add-shopping-cart\",\n                    size: 25,\n                    color: \"#ffffff\"\n                  }),\n                  buttonStyle: styles.buyButton,\n                  title: \"BUY\"\n                })]\n              })\n            }, product.id);\n          })\n        })\n      }), _jsx(ScrollView, {\n        horizontal: true,\n        showsHorizontalScrollIndicator: false,\n        contentContainerStyle: styles.scrollViewContent,\n        children: _jsx(View, {\n          style: styles.container,\n          children: products.map(function (product) {\n            return _jsx(TouchableOpacity, {\n              style: styles.productContainer,\n              onPress: function onPress() {\n                return handleProductPress(product.id);\n              },\n              children: _jsxs(Card, {\n                style: styles.card,\n                children: [_jsx(Image, {\n                  source: {\n                    uri: product.image\n                  },\n                  style: styles.productImage\n                }), _jsx(Text, {\n                  style: styles.text,\n                  children: product.title\n                }), _jsxs(Text, {\n                  style: styles.productPrice,\n                  children: [\"Price: $\", product.price]\n                }), _jsx(Button, {\n                  icon: _jsx(Icon, {\n                    name: \"add-shopping-cart\",\n                    size: 25,\n                    color: \"#ffffff\"\n                  }),\n                  buttonStyle: styles.buyButton,\n                  title: \"BUY\"\n                })]\n              })\n            }, product.id);\n          })\n        })\n      })]\n    })\n  });\n};\nvar styles = StyleSheet.create({\n  scrollViewContent: {\n    justifyContent: 'space-evenly'\n  },\n  container: {\n    flexDirection: 'row',\n    flexWrap: 'wrap'\n  },\n  productContainer: {\n    width: 250,\n    height: 250,\n    marginLeft: 10\n  },\n  card: {\n    flex: 1\n  },\n  text: {\n    color: 'black',\n    fontSize: 16,\n    fontWeight: 'bold',\n    height: 40,\n    overflow: 'hidden',\n    textAlign: 'center'\n  },\n  productImage: {\n    width: '100%',\n    height: 150\n  },\n  productPrice: {\n    marginBottom: 10,\n    textAlign: 'center'\n  },\n  buyButton: {\n    borderRadius: 0,\n    marginLeft: 0,\n    marginRight: 0,\n    marginBottom: 0\n  }\n});\nexport default HomeScreen;","map":{"version":3,"names":["React","useEffect","useState","View","ScrollView","StyleSheet","TouchableOpacity","Text","Card","Button","Image","Icon","useNavigation","Header","jsx","_jsx","jsxs","_jsxs","Fragment","_Fragment","HomeScreen","_useState","_useState2","_slicedToArray","products","setProducts","navigation","fetch","then","response","json","result","catch","error","console","handleProductPress","productId","navigate","children","title","style","flexDirection","alignItems","marginTop","marginLeft","fontSize","fontWeight","flex","marginRight","color","marginEnd","horizontal","showsHorizontalScrollIndicator","contentContainerStyle","styles","scrollViewContent","container","map","product","productContainer","onPress","id","card","source","uri","image","productImage","text","productPrice","price","icon","name","size","buttonStyle","buyButton","create","justifyContent","flexWrap","width","height","overflow","textAlign","marginBottom","borderRadius"],"sources":["D:/LTTBDT2/Example01/src/screens/HomeScreen.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { View, ScrollView, StyleSheet, TouchableOpacity, Text } from 'react-native';\r\nimport { Card, Button, Image } from 'react-native-elements';\r\nimport Icon from 'react-native-vector-icons/MaterialIcons';\r\nimport { useNavigation } from '@react-navigation/native';\r\nimport Header from '../components/Header';\r\n\r\nconst HomeScreen = () => {\r\n  const [products, setProducts] = useState([]);\r\n  const navigation = useNavigation();\r\n\r\n  useEffect(() => {\r\n    fetch('https://fakestoreapi.com/products')\r\n      .then(response => response.json())\r\n      .then(result => {\r\n        setProducts(result);\r\n      })\r\n      .catch(error => console.error('Error fetching products:', error));\r\n  }, []);\r\n\r\n  const handleProductPress = (productId) => {\r\n    navigation.navigate('Detail', { productId });\r\n  };\r\n\r\n  return (\r\n    <><ScrollView>\r\n      <Header title=\"SHOPPE\" />\r\n      <View style={{ flexDirection: 'row', alignItems: 'center' }}>\r\n        <Text style={{ marginTop: 130, marginLeft: 15, fontSize:22, fontWeight: 'bold' }}>Hot deals</Text>\r\n        <View style={{ marginTop: 130, flex: 1, flexDirection: 'row-reverse', marginRight: 10 }}>\r\n          <Text style={{ fontSize: 18, color: 'red', marginEnd: 15 }}>View all</Text>\r\n        </View>\r\n      </View>\r\n\r\n      <ScrollView\r\n        horizontal\r\n        showsHorizontalScrollIndicator={false}\r\n        contentContainerStyle={styles.scrollViewContent}\r\n        \r\n      >\r\n        <View style={styles.container}>        \r\n          {products.map(product => (\r\n            <TouchableOpacity\r\n              key={product.id}\r\n              style={styles.productContainer}\r\n              onPress={() => handleProductPress(product.id)}\r\n            >\r\n              <Card style={styles.card}>\r\n                <Image source={{ uri: product.image }} style={styles.productImage} />\r\n                <Text style={styles.text}>{product.title}</Text>\r\n                <Text style={styles.productPrice}>Price: ${product.price}</Text>\r\n                <Button\r\n                  icon={<Icon name=\"add-shopping-cart\" size={25} color=\"#ffffff\" />}\r\n                  buttonStyle={styles.buyButton}\r\n                  title=\"BUY\"\r\n                />\r\n              </Card>\r\n            </TouchableOpacity>\r\n          ))}\r\n        </View>\r\n      </ScrollView>\r\n\r\n      {/* Thêm một ScrollView ngang khác cho sản phẩm của View thứ hai */}\r\n      <ScrollView\r\n        horizontal\r\n        showsHorizontalScrollIndicator={false}\r\n        contentContainerStyle={styles.scrollViewContent}\r\n      >\r\n        <View style={styles.container}>\r\n          {products.map(product => (\r\n            <TouchableOpacity\r\n              key={product.id}\r\n              style={styles.productContainer}\r\n              onPress={() => handleProductPress(product.id)}\r\n            >\r\n              <Card style={styles.card}>\r\n                <Image source={{ uri: product.image }} style={styles.productImage} />\r\n                <Text style={styles.text}>{product.title}</Text>\r\n                <Text style={styles.productPrice}>Price: ${product.price}</Text>\r\n                <Button\r\n                  icon={<Icon name=\"add-shopping-cart\" size={25} color=\"#ffffff\" />}\r\n                  buttonStyle={styles.buyButton}\r\n                  title=\"BUY\"\r\n                />\r\n              </Card>\r\n            </TouchableOpacity>\r\n          ))}\r\n        </View>\r\n      </ScrollView>\r\n      <ScrollView\r\n        horizontal\r\n        showsHorizontalScrollIndicator={false}\r\n        contentContainerStyle={styles.scrollViewContent}\r\n      >\r\n        <View style={styles.container}>\r\n          {products.map(product => (\r\n            <TouchableOpacity\r\n              key={product.id}\r\n              style={styles.productContainer}\r\n              onPress={() => handleProductPress(product.id)}\r\n            >\r\n              <Card style={styles.card}>\r\n                <Image source={{ uri: product.image }} style={styles.productImage} />\r\n                <Text style={styles.text}>{product.title}</Text>\r\n                <Text style={styles.productPrice}>Price: ${product.price}</Text>\r\n                <Button\r\n                  icon={<Icon name=\"add-shopping-cart\" size={25} color=\"#ffffff\" />}\r\n                  buttonStyle={styles.buyButton}\r\n                  title=\"BUY\"\r\n                />\r\n              </Card>\r\n            </TouchableOpacity>\r\n          ))}\r\n        </View>\r\n      </ScrollView>\r\n      </ScrollView>\r\n    </>\r\n  );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  scrollViewContent: {\r\n    // Sử dụng justifyContent: 'space-evenly' để giữ khoảng cách giữa các sản phẩm\r\n    justifyContent: 'space-evenly',\r\n  },\r\n  container: {\r\n    flexDirection: 'row',\r\n    flexWrap: 'wrap',\r\n  },\r\n  productContainer: {\r\n    width: 250, // Đặt chiều rộng theo ý muốn\r\n    height: 250,\r\n    marginLeft: 10, // Khoảng cách giữa các sản phẩm\r\n  },\r\n  card: {\r\n    flex: 1,\r\n  },\r\n  text: {\r\n    color: 'black',\r\n    fontSize: 16,\r\n    fontWeight: 'bold',\r\n    height: 40,\r\n    overflow: 'hidden',\r\n    textAlign: 'center',\r\n  },\r\n  productImage: {\r\n    width: '100%',\r\n    height: 150,\r\n  },\r\n  productPrice: {\r\n    marginBottom: 10,\r\n    textAlign: 'center',\r\n  },\r\n  buyButton: {\r\n    borderRadius: 0,\r\n    marginLeft: 0,\r\n    marginRight: 0,\r\n    marginBottom: 0,\r\n  },\r\n});\r\n\r\nexport default HomeScreen;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}